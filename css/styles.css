*, *::before, *::after {
  box-sizing: border-box;
}

body {
	font-family: verdana, sans-serif;
	font-size: 2vw;
	font-weight: 300;
}

#menu {
	width: 100%;
	display: grid;
	grid-template-columns: 10vw auto 5vw auto 5vw auto 10vw;
	justify-items: center;
	padding: 0.6vw;
	background-color: #f1ece8;
	position: fixed;
/*	border: 1px solid red;*/
}

header h1 {
font-family: verdana, sans-serif;
font-size: 3vw;
font-weight: 550;
color: #2a41a6;
padding: 0vw;
margin: 0;
}

a:link {
	text-decoration: none;
}
a:visited {
	text-decoration: none;
}
a:hover {
	text-decoration: none;
}
a:active {
	text-decoration: none;
}

.menu-h {
	font-family: verdana, sans-serif;
	font-size: 3vw;
	font-weight: 6000;
	color: #2a41a6;
	padding: 0vw;
	margin: 0;
}

img {
	width: 100%;
	height: auto;
}

p {
	margin: 0;
}

#pflink {
grid-column: 2;
}
#abtmelink {
grid-column: 4;
}
#contactlink {
grid-column: 6;
}

#maingrid {
	width: 100vw;
	height: auto;
	display: grid;
	grid-template-columns: repeat(20, 1fr);
	grid-template-rows: auto 4vw repeat(7, auto) repeat(10, 4vw);
	background-color:   #e9f0f7;
}

#mainpic {
/*	grid-area: 1/1/20/21;*/
	grid-column: 1/21;
	grid-row: 1/3;
/*	padding: 2vw;*/
}

#welcomebox {
	display: flex;
	grid-column: 3/19;
	grid-row: 2/4;
	flex-wrap: nowrap;
	gap: 3vw;
	font-size: 4vw;
	align-items: center;
	padding: 2vw;
	border: 1.5vw solid white;
}

.fboxbgcolors {
	background-color: #bdd2e1;
}

#profilepic {
	width: 15vw;
	height: auto;
}

#welcometext {
}

#porthead {
	grid-column: 2/19;
	grid-row: 5/5;
	margin: 2vw;
	font-size: 4.5vw;
	padding-left: 33vw;
}
/*probably a better way to align it in the center of the span of those columns*/

.example-head{
	margin: 0;
	font-size: 3vw;
}

.exampletext {
	line-height: 3.5vw;
}

/*I imagine I could simplify all the BELOW example boxes by using a class to specify common attributes!*/

#exampleabox {
	display: flex;
	grid-column: 4/17;
	grid-row: 6/6;
	flex-wrap: wrap;
	gap: 2vw;
	border: 1vw dashed #4162c3;
	padding: 2vw;
	background-color:  #f9f8e3;
	margin: 3vw;
}

#examplebbox {
	display: flex;
	grid-column: 4/17;
	grid-row: 7/7;
	flex-wrap: wrap;
	gap: 2vw;
	border: 1vw dashed #4162c3;
	padding: 2vw;
	background-color: #f9f8e3;
	margin: 3vw;
}

#examplecbox {
	display: flex;
	grid-column: 4/17;
	grid-row: 8/8;
	flex-wrap: wrap;
	gap: 2vw;
	border: 1vw dashed #4162c3;
	padding: 2vw;
	background-color: #f9f8e3;
	margin: 3vw;
}

#exampledbox {
	display: flex;
	grid-column: 4/17;
	grid-row: 9/9;
	flex-wrap: wrap;
	gap: 2vw;
	border: 1vw dashed #4162c3;
	padding: 2vw;
	background-color: #f9f8e3;
	margin: 3vw;
}

#contactbox {
	display: flex;
	grid-column: 1/21;
	grid-row: 10/15;
	flex-wrap: wrap;
	flex-direction: column;
	gap: 3vw;
	padding-left: 2vw;
	border-top: 1.5vw solid #4162c3;
}

#contactbox h2{
	padding-top; 2vw
}

#contactbox p{
	font-size: 3vw;
}

#contactpicbox {
	display: flex;
	grid-column: 1/21;
	grid-row: 15/20;
	flex-direction: row;
	gap: 2vw;
	padding: 2vw;
}

/*example of media query
i need mine to change porfotable example boxes to two abreast. */

/*@media only screen and (min-width: 700px) {
/*	this media query will only activate on screens (eg not print) and on a minimum width of 700 pixels
	it says to add a column at 700pixels, and so on, at 1000,
	the media query is overriding previous css, best to put it at the bottom.*/
    .cards {
        grid-template-columns: repeat(2, 1fr);
    }
/*	could at more rules in here, within media query brackets, eg changin colours and what have you as screen size increases, or even display: none; */
}

@media only screen and (min-width: 1000px) {
    .cards {
        grid-template-columns: repeat(3, 1fr);
    }
}*/

